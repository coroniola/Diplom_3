{"name": "Тест: Отображение заказов пользователя в ленте заказов", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\"> is not clickable at point (1512,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31", "trace": "self = <tests.test_order_feed.TestOrderFeed object at 0x00000177CC7CE110>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"0dd8c5c7-2f89-4224-a692-08dc19e28891\")>\nuser = {'email': 'hsqrpul@example.com', 'json': {'accessToken': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NmIz...': True, 'user': {'email': 'hsqrpul@example.com', 'name': 'tqhjeyuk'}}, 'name': 'tqhjeyuk', 'password': 'urztmoxxouop'}\n\n    @allure.title('Тест: Отображение заказов пользователя в ленте заказов')\n    @allure.description(\n        'Проверяет, что заказы пользователя из раздела \"История заказов\" отображаются на странице \"Лента заказов\"')\n    def test_user_orders_displayed_in_order_feed(self, driver, user):\n        order_page = OrderPage(driver)\n        order_page.navigate_to_url(Urls.LOGIN)\n        personal_account_page = PersonalAccountPage(driver)\n        personal_account_page.login_account(user)\n        main_page = MainPage(driver)\n        main_page.add_ingredient_to_constructor()\n        main_page.click_place_order_button()\n        order_number = order_page.get_num_order()\n        main_page.close_popup()\n        main_page.navigate_to_order_feed()\n        order_page = OrderPage(driver)\n        feed_orders = order_page.get_num_order()\n        assert str(order_number) in feed_orders, 'Заказ пользователя не отображается в Ленте заказов'\n>       personal_account_page.go_to_personal_account()\n\ntests\\test_order_feed.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\personal_account_page.py:11: in go_to_personal_account\n    self.click_element_when_clickable(PersonalAccountLocators.ACCOUNT_BUTTON)\npages\\base_page.py:34: in click_element_when_clickable\n    return WebDriverWait(self.driver, time).until(ec.element_to_be_clickable(locator)).click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000177CC7E9110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <p class=\\\\\"AppHeader_heade...sys.mjs:204:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\"> is not clickable at point (1512,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "description": "Проверяет, что заказы пользователя из раздела \"История заказов\" отображаются на странице \"Лента заказов\"", "steps": [{"name": "Авторизация", "status": "passed", "parameters": [{"name": "data", "value": "{'email': 'hsqrpul@example.com', 'name': 'tqhjeyuk', 'password': 'urztmoxxouop', 'json': {'success': True, 'user': {'email': 'hsqrpul@example.com', 'name': 'tqhjeyuk'}, 'accessToken': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NmIzMGNkOWVkMjgwMDAxYjQzYmEzOCIsImlhdCI6MTcxODMwMDg3NywiZXhwIjoxNzE4MzAyMDc3fQ.BBHizx2uKUc69ht5H6d3KE42UiIy2v44lMbiCHNYFnM', 'refreshToken': '60daacb486659d2bc3da8cb87088c7da6d7eb2bd1a138a4e73f54c3f1a62991f3c9ad305a786b5cb'}}"}], "start": 1718300878493, "stop": 1718300878609}, {"name": "Добавляем ингредиент в конструктор", "status": "passed", "start": 1718300878609, "stop": 1718300878772}, {"name": "Нажимаем на кнопку 'Оформить заказ'", "status": "passed", "start": 1718300878773, "stop": 1718300878790}, {"name": "Получаем номер заказа", "status": "passed", "start": 1718300878791, "stop": 1718300879845}, {"name": "Закрываем всплывающее окно", "status": "passed", "start": 1718300879846, "stop": 1718300879856}, {"name": "Переходим на страницу ленты заказов", "status": "passed", "start": 1718300879856, "stop": 1718300879871}, {"name": "Получаем номер заказа", "status": "passed", "start": 1718300879873, "stop": 1718300879909}, {"name": "Нажимаем на кнопку Личный кабинет", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\"> is not clickable at point (1512,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n", "trace": "  File \"C:\\Users\\coroniola\\Downloads\\D1\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\coroniola\\Downloads\\D1\\Diplom_3\\pages\\personal_account_page.py\", line 11, in go_to_personal_account\n    self.click_element_when_clickable(PersonalAccountLocators.ACCOUNT_BUTTON)\n  File \"C:\\Users\\coroniola\\Downloads\\D1\\Diplom_3\\pages\\base_page.py\", line 34, in click_element_when_clickable\n    return WebDriverWait(self.driver, time).until(ec.element_to_be_clickable(locator)).click()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\coroniola\\Downloads\\D1\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\coroniola\\Downloads\\D1\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\coroniola\\Downloads\\D1\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\coroniola\\Downloads\\D1\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1718300879909, "stop": 1718300879926}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1718300877427, "stop": 1718300879928, "uuid": "0b016286-e382-4a98-93a5-a26b9313217b", "historyId": "3f78e440f3fd1c78d9848e8775b89e62", "testCaseId": "6c1ab92dd29e510d43e022d239463f4e", "fullName": "tests.test_order_feed.TestOrderFeed#test_user_orders_displayed_in_order_feed", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "WIN-FL5IV5LS9IV"}, {"name": "thread", "value": "19436-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}